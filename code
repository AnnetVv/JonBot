import math
import numpy as np


class JonBot:
    def __init__(self):
        self.topics = {
            'математика': self.handle_math,
            'філологія': self.handle_philology,
            'географія': self.handle_geography,
            'астрономія': self.handle_astronomy,
            'загальні питання': self.handle_other,
            'help': self._handle_help
        }
    
    def get_user_input(self):
        user_input = input('\033[35m[User]: \033[0m').lower()
        return user_input
        

    def print(self, text):
        print(f'\033[38;5;208m[Jon]: {text}\033[0m')


    def print_greeting(self):
        topics = ", ".join(self.topics.keys())
        print(f"Вітаю, мене звати JonBot. Ви можете задати мені питання з наступних тем: \033[38;5;208m{topics}\033[0m.")
        while True:
            topic = self.get_user_input()
            if topic == 'вийти':
                self.print('Радий був поспілкуватися, до зустрічі')
                return
            if topic == 'назад':
                continue
            self.topics.get(topic, self.handle_other)()
      
    def _handle_help(self):
            while True:
                print('\033[33mПісля запуску програми ви побачите наступне повідомлення:\nВітаю, мене звати JonBot\nВи можете задати мені питання з наступних тем\nматематика, філологія, географія, астрономія або загальні питання\nВведіть тему, про яку ви хочете дізнатися більше.\nПісля цього програма запропонує вам вибрати одну з наступних підтем\nВведіть підтему і слідуйте інструкціям на екрані.\nПісля виконання запиту програма запропонує повторити операцію або повернутися на попередній рівень меню.\033[0m')
                break

    def handle_math(self):
        while True:
            self.print('Мої функції у математиці:')
            print('\033[33mзнайти найбільший спільний дільник або найменше спільне кратне двох чисел\033[0m')
            print('\033[33mформула векторного добутку векторів\033[0m')
            print('\033[33mформула для обчислення площі трикутника за допомогою векторного добутку\033[0m')
            print('\033[33mплоща прямокутника\033[0m')
            print('\033[33mвивести sin(x) та cos(x)\nабо назад\033[0m')
            sub_topic = self.get_user_input()
            if sub_topic == 'назад':
                break
            elif sub_topic == 'формула векторного добутку векторів':
                while True:
                    try:
                        A = input('Введіть перший вектор у форматі x, y, z = ')
                        A = tuple(map(float, A.split(', ')))
                        B = input( 'Введіть другий вектор у форматі x, y, z = ')
                        B = tuple(map(float, B.split(', ')))
                        result = np.cross(A, B)
                        self.print(f'Векторний добуток = {result}')
                    except ValueError:
                        print('\033[1;31mПомилка: Будь ласка, введіть число\033[0m')
                    except Exception as e:
                        print(f"\033[1;31mПомилка: {e}\033[0m")
                    repeat = input(
                        'Чи хочете ви повторити? Так/Ні\n').lower()
                    if repeat == 'ні':
                        break  
  
            elif sub_topic == 'знайти найбільший спільний дільник або найменше спільне кратне двох чисел':
                while True:
                    try:
                        def gcd(a, b):
                            while b != 0:
                                a, b = b, a % b
                            return a
                        a = int(input('Введіть перше число: '))
                        b = int(input('Введіть друге число: '))
                        self.print(f'НСД({a}, {b}) = {gcd(a, b)}')
                        self.print(f'НСК({a}, {b}) = {(a*b)//gcd(a,b)}')
                    except ValueError:
                        print(
                            '\033[1;31mПомилка: Будь ласка, введіть число\033[0m')
                    except Exception as e:
                        print(f"\033[1;31mПомилка: {e}\033[0m")
                    repeat = input(
                        'Чи хочете ви повторити? Так/Ні\n').lower()
                    if repeat == 'ні':
                        break

            elif sub_topic == 'площа прямокутника':
                while True:
                      try:
                          def area_rect(a, b):
                              return a * b
                          a = int(input("Введіть довжину першої сторони: "))
                          b = int(input("Введіть довжину другої сторони: "))
                          self.print(f"Площа прямокутника дорівнює {area_rect(a, b)}")
                      except ValueError:
                          print('\033[1;31mПомилка: Будь ласка, введіть число\033[0m')
                          continue
                      except Exception as e:
                          print(f"\033[1;31mПомилка: {e}\033[0m")
                          continue
                      repeat = input('Чи хочете ви повторити? Так/Ні\n').lower()
                      if repeat == 'ні':
                         break

            elif sub_topic == 'формула для обчислення площі трикутника за допомогою векторного добутку':             
                while True:
                    try:
                      a = float(input('Введіть довжину першої сторони: '))
                      b = float(input('Введіть довжину другої сторони: '))
                      c = float(input('Введіть довжину третьої сторони: '))
                      s = (a + b + c) / 2
                      v1 = [a, b, c]
                      v2 = [1, 1, 1]
                      v3 = [b * c, c * a, a * b]
                      cross_product = [v1[1]*v3[2] - v1[2]*v3[1], v1[2]*v3[0] - v1[0]*v3[2], v1[0]*v3[1] - v1[1]*v3[0]]
                      cross_product_module = ((cross_product[0]**2 + cross_product[1]**2 + cross_product[2]**2)**0.5)
                      area = cross_product_module / 2
                      self.print(f'Площа трикутника зі сторонами {a}, {b} та {c} дорівнює {area:.2f}.')

                    except ValueError:
                          print('\033[1;31mПомилка: Будь ласка, введіть число\033[0m')
                          continue
                    except Exception as e:
                          print(f"\033[1;31mПомилка: {e}\033[0m")
                          continue
                    repeat = input('Чи хочете ви повторити? Так/Ні\n').lower()
                    if repeat == 'ні':
                         break

            elif sub_topic == 'вивести sin(x) та cos(x)':
                while True:
                    try:
                        x = float(input("Введіть значення x: "))
                        self.print(f"sin({x}) = {math.sin(x)}")
                        self.print(f"cos({x}) = {math.cos(x)}")
                    except ValueError:
                        print(
                            '\033[1;31mПомилка: Будь ласка, введіть число\033[0m')
                    except Exception as e:
                        print(f"\033[1;31mПомилка: {e}\033[0m")
                    repeat = input(
                            'Чи хочете ви повторити? Так/Ні\n').lower()
                    if repeat == 'ні':
                            break
            else:
                  print('\033[1;32mВибачте, я не розумію цю тему\033[0m')
                  continue

    def handle_geography(self):
        while True:
            self.print('мої функції у географії:')
            print('\033[33mнайбільше озеро в світі за площею,\nде знаходиться Сахара - найбільша пустеля в світі,\nяка держава має найбільшу кількість озер в світі,\nдержави, які мають найбільшу кількість водосховищ в світі,\nзнайти азимут від точки А до точки В\033[0m')
            sub_topic = input().lower()
            if sub_topic == 'назад':
                break
            elif sub_topic == 'найбільше озеро в світі за площею':
                self.print('Каспійське море або Каспій\n~~~~~~~~~~~~~~~~~~\n~~~~~~~~~~~~~~~~~~')
            elif sub_topic == 'де знаходиться сахара - найбільша пустеля в світі':
                self.print('Ця пустеля розташована в більшості своїй на території десяти країн, зокрема: Алжир, Чад, Єгипет, Лівія, Малі, Мавританія, Нігер, Судан, Туніс та Західна Сахара\n~~~~~~~~~~~~~~~~~~\n~~~~~~~~~~~~~~~~~~')
            elif sub_topic == 'яка держава має найбільшу кількість озер в світі':
                self.print('Канада має найбільшу кількість озер в світі. За даними Департаменту природних ресурсів Канади, в цій країні є близько 31,752 озер, кожне з яких має площу більше 3 квадратних кілометрів. Найбільші озера Канади - Верхнє та Нижнє озера - є двома з найбільших озер у світі\n~~~~~~~~~~~~~~~~~~\n~~~~~~~~~~~~~~~~~~')
            elif sub_topic == 'держави, які мають найбільшу кількість водосховищ в світі':
                self.print('США та Китай\n~~~~~~~~~~~~~~~~~~\n~~~~~~~~~~~~~~~~~~')
            elif sub_topic == 'знайти азимут від точки А до точки В':
                x1 = float(
                    input("Введіть координату x точки А: "))
                y1 = float(
                    input("Введіть координату y точки А: "))
                x2 = float(
                    input("Введіть координату x точки B: "))
                y2 = float(
                    input("Введіть координату y точки B: "))
                dx = x2 - x1
                dy = y2 - y1
                azimuth_rad = math.atan2(dy, dx)
                azimuth_deg = math.degrees(azimuth_rad)
                self.print(
                    f"Азимут від точки A до точки B: {azimuth_deg} градусів")
            else:
                print(
                    '\033[1;31mВибачте, я не розумію цю тему\033[0m')
                continue

    def handle_philology(self):
        while True:
            self.print('мої функції у філології:')
            print('\033[33mяк утворюються питальні речення в англійській мові\nабо назад\033[0m')
            sub_topic = self.get_user_input()
            if sub_topic == 'назад':
                break
            elif sub_topic == 'як утворюються питальні речення в англійській мові':
                self.print('у питальному реченні порядок слів змінюється, зазвичай з підмета і присудка формується питальне слово або сполучник, який переставляється на початок речення\n~~~~~~~~~~~~~~~~~~\n~~~~~~~~~~~~~~~~~~')
            else:
                print('\033[1;31mВибачте, я не розумію цю тему\033[0m')
                continue

    def handle_astronomy(self):
        while True:
            self.print('мої функції у астрономії:')
            print('\033[33mяк впливає зоряне світло на здоров\'я людини\nабо назад\033[0m')
            sub_topic = self.get_user_input()
            if sub_topic == 'назад':
                break
            elif sub_topic == 'як впливає зоряне світло на здоров\'я людини':
                self.print('Зоряне світло може впливати на людини різними способами. Наприклад, деякі дослідження показали, що нічне освітлення може порушувати біологічний ритм людини, який контролюється внутрішнім годинником, розташованим у мозку. Це може призводити до різних проблем зі сном, таких як безсоння та порушення сну. Зоряне світло може впливати на метаболізм та вироблення гормонів, таких як мелатонін\n~~~~~~~~~~~~~~~~~~\n~~~~~~~~~~~~~~~~~~')
            else:
                print('\033[1;31mВибачте, я не розумію цю тему\033[0m')
                continue

    def handle_other(self):
        while True:
            self.print('мої функції в темі "загальні питання":')
            print('\033[33mкотра година,\nскільки днів до Нового Року,\nяк тебе звати,\nзаспівати колядку,\nсказати надихаючу цитату,\nрозказати анекдот,\nякий зараз місяць,\nгра в кольори,\nрозкажи приказки,\nрозкажи казочку,\nяка зараз пора року,\nрозкажи цікаві факти\nабо назад\033[0m')
            sub_topic = self.get_user_input()
            if sub_topic == 'назад':
                break
            elif sub_topic == 'який зараз місяць':
                import datetime
                now = datetime.datetime.now()
                self.print(now.strftime("%B %Y") + "\n" + "~" * 18)

            elif sub_topic == 'як тебе звати':
                self.print('Мене звуть JonBot! Я допомагаю в різних уроках\n~~~~~~~~~~~~~~~~~~\n~~~~~~~~~~~~~~~~~~')

            elif sub_topic == 'скільки днів до нового року':
                import datetime
                now = datetime.datetime.now()
                new_year = datetime.datetime(now.year + 1, 1, 1)
                delta = new_year - now
                self.print("До Нового Року залишилося {} днів.".format(delta.days))
                self.print("~" * 18 + "\n" + "~" * 18)

            
            elif sub_topic == 'заспівати колядку':
                import random
                koladky = [
                    'Я маленький пастушок\nЗагорнувся в кожушок\nНа скрипочку граю,\nВас усіх вітаю.\nА ви, люди, чуйте,\nКоляду готуйте\n\n- Яблучка, горішки\nДітям для потішки.',
                    'Маленький Ісусик не спить, не дрімає,\n\nСвоїми рученятами весь світ обіймає. \n\nІ вашу хатину, і вашу родину, \n\nІ всю Україну - Христос ся рождає!',
                    'Сніг на землю сипле тихо,\nНа душі велика втіха.\nВифлеємська зірка сяє\nТа Ісуса прославляє.',
                    'Зірочка з неба світло кидає.\nХристос-Дитятко нині рождаєсь.\nСвіти весело Христу й Марії,\nКріпи у серці віру й надію.\nХай ця зірничка в Різдвяні свята\nНесе все щастя до вашої хати,\nЗдоров’я, втіхи, пошани світу,\nБагатства й долі'
                ]
                random_koladka = random.randint(0, len(koladky)-1)
                self.print(koladky[random_koladka])
                self.print("~" * 18)

            elif sub_topic == 'сказати надихаючу цитату':
                import random
                quotes = [
                    'Не варто хвилюватися. У світі немає нічого страшнішого за нас самих. Туве Янссон',
                    'Стрес — це не те, що з вами сталося, а те, як ви це сприймаєте. Ганс Сельє',
                    'Якщо мріяти, то тільки масштабно. Дональд Трамп',
                    'Поки ми живі, ми повинні виконувати свої обіцянки, хоч які б складні вони не були. Філіп Пуллман',
                    'У житті немає жалю, лише уроки. Дженніфер Еністон'
                ]
                saying = random.choice(quotes)
                self.print(f"{saying}\n~~~~~~~~~~~~~~~~~~\n~~~~~~~~~~~~~~~~~~")


            
            elif sub_topic == 'розказати анекдот':
                self.print('У зв’язку з вірусом закликають думати не тільки про себе, а й про людей похилого віку навколо, намагатися уникати зустрічей з ними. Але я сьогодні скриплячи зубами подзвонив тещі і сказав, щоб більше не приїжджала до нас в гості\n~~~~~~~~~~~~~~~~~~\n~~~~~~~~~~~~~~~~~~')
           
            elif sub_topic == 'котра година':
                import datetime
                now = datetime.datetime.now()
                self.print(f"Зараз {now.strftime('%H:%M:%S')} годин." + "\n" + "~" * 18)

            elif sub_topic == 'гра в кольори':
                import random
                colors = ['червоний', 'помаранчевий', 'жовтий',
                          'зелений', 'голубий', 'синій', 'фіолетовий']
                secret_color = random.choice(colors)
                self.print("Я загадав колір. Спробуй вгадати! (введи червоний, помаранчевий, жовтий, зелений, голубий, синій або фіолетовий)")
                while True:
                    guess = input().lower()
                    if guess == secret_color:
                        self.print(
                            "Так, ти вгадав! Це був", secret_color)
                        break
                    else:
                        self.print("Ні, спробуй ще раз.")
                        continue
                while True:
                    try:
                        repeat = input(
                            'Чи хочете ви повторити? Так/Ні\n').lower()
                        if repeat == 'так':
                            secret_color = random.choice(colors)
                            self.print(
                                "Я загадав новий колір. Спробуйте вгадати!")
                            while True:
                                guess = input().lower()
                                if guess == secret_color:
                                    self.print(
                                        "Так, ви вгадали! Це був", secret_color)
                                    break
                                else:
                                    self.print(
                                        "Ні, спробуйте ще раз.")
                                    continue
                        elif repeat == 'ні':
                            break
                        else:
                            raise ValueError(
                                'Будь ласка, введіть Так або Ні')
                    except ValueError as e:
                        print(f"\033[1;31mПомилка: {e}\033[0m")
                    except Exception as e:
                        print(f"\033[1;31mПомилка: {e}\033[0m")

           
            elif sub_topic == 'розкажи приказки':
                import random
                sayings = ['Або пан, або пропав',
                           'Битому собаці кия не показуй',
                           'Брехливу собаку далеко чути',
                           'Голодній кумі хліб на умі',
                           'Де відвага, там і щастя']
                saying = random.choice(sayings)
                self.print(f"{saying}\n~~~~~~~~~~~~~~~~~~\n~~~~~~~~~~~~~~~~~~")

            elif sub_topic == 'розкажи казочку':
                self.print('Гналися якось мисливці з собаками за вовком – от-от наздоженуть. Рятуючись, заскочив вовчисько на чиєсь подвір’я, побачив кота й ну благати його:\n— Котику, голубчику, порятуй мене, допоможи сховатися від мисливців. Женуться за мною.\n— Біжи до сусіди Криша, — каже кіт. — Він добрий, кожному допоможе.\n— Не можна мені до нього бігти, — відповідає вовк, — якось по весні я в нього барана зарізав.\n— Ну, тоді Юріса попроси.\n— Не допоможе мені Юріс. Я в нього козу з’їв, він мені цього ніяк не забуде.\n— Що ж, — каже кіт, — піди Клавса попроси.\n— Що ти! Я йому й на очі боюся попадати – в нього я не одне ягня вкрав.\n— То, може, Яніс тебе порятує?\n— Е, ні! Нема чого й сподіватися! Я в Яніса теля задушив.\n— Добре ж ти всім насолив, — сказав кіт. — Не буде тобі тут порятунку. Недарма кажуть: що посіяв, те й пожнеш\n~~~~~~~~~~~~~~~~~~\n~~~~~~~~~~~~~~~~~~')
           
            elif sub_topic == 'яка зараз пора року':
                import datetime
                now = datetime.datetime.now()
                if now.month in (12, 1, 2):
                    season = "зима"
                elif now.month in (3, 4, 5):
                    season = "весна"
                elif now.month in (6, 7, 8):
                    season = "літо"
                else:
                    season = "осінь"
                self.print(f"Зараз {season}.\n~~~~~~~~~~~~~~~~~~\n~~~~~~~~~~~~~~~~~~")

            elif sub_topic == 'розкажи цікаві факти':
                import random
                quotes = [
                    'На нашій шкірі може жити більше живих організмів, ніж людей на всій планеті.',
                    'Незважаючи на відому всім жінкам ламкість локонів, 1 волосинка здатна витримати предмет вагою близько 100 р.',
                    'Ми відчуваємо смак лише тієї їжі, яку слина вже почала розчиняти у роті. Якщо висушити рот від слини і покласти в нього шматочок їжі, то її смак відчуватися не буде до тих пір, поки не виробиться достатню кількість слини, і вона не почне «працювати».',
                    'Людина завжди чхає з закритими очима, при цьому серце чхаючої зупиняється на кілька секунд, ми цього просто не помічаємо.',
                    'Жирафи сплять стоячи, при цьому даними тваринам цілком вистачає півгодинного сну. Дуже рідко буває, що жирафи сплять більше 2 годин.'
                ]
                random_quote = random.choice(quotes)
                self.print(f'{random_quote}\n~~~~~~~~~~~~~~~~~~\n~~~~~~~~~~~~~~~~~~')
            else:
                try:
                    exec(sub_topic)
                except Exception as e:
                    print(f"\033[1;31mПомилка: {e}\033[0m")
                continue


if __name__ == '__main__':
    bot = JonBot()
    bot.print_greeting()
